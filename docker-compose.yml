version: '3'
services:
  redis:
    image: redis:alpine
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  database:
    image: postgres:alpine
    restart: always
    ports:
      - ${DB_CONNECTION_PORT}:${DB_CONNECTION_PORT}
    env_file:
      - .env
    environment:
      - PGUSER=${DB_CONNECTION_USER}
      - PGSSLMODE=disable
      - POSTGRES_PASSWORD=${DB_CONNECTION_PASSWORD}
      - POSTGRES_USER=${DB_CONNECTION_USER}
      - POSTGRES_DB=${DB_CONNECTION_DBNAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  cash-grab:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env
    environment:
      - PORT=${PORT}
      - DB_CONNECTION_HOST=${DB_CONNECTION_HOST}
      - DB_CONNECTION_USER=${DB_CONNECTION_USER}
      - DB_CONNECTION_PASSWORD=${DB_CONNECTION_PASSWORD}
      - DB_CONNECTION_DBNAME=${DB_CONNECTION_DBNAME}
      - DB_CONNECTION_PORT=${DB_CONNECTION_PORT}
      - JWS_KEY=${JWS_KEY}
      - AWS_SECRET_ID=${AWS_SECRET_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - EMAIL_PRO=${EMAIL_PRO}
      - EMAIL_PRO_SMTP=${EMAIL_PRO_SMTP}
      - EMAIL_PRO_PASSWORD=${EMAIL_PRO_PASSWORD}
      - EMAIL_PRO_PORT=${EMAIL_PRO_PORT}
      - REDIS_ADDR=${REDIS_ADDR}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      database:
        condition: service_healthy
